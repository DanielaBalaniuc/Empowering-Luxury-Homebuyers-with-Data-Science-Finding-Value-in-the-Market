# -*- coding: utf-8 -*-
"""Empowering Luxury Homebuyers with Data Science: Finding Value in the Market.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1l-0BKUwdsHDhuLQxBbP_h0TzM0L5j4R2

Empowering Luxury Homebuyers with Data Science: Finding Value in the Market.

In today’s real estate market, potential homeowners, especially those interested in the luxury segment, encounter the significant challenge of finding properties that not only satisfy their aesthetic and comfort preferences but also offer substantial value. This is where data science plays a pivotal role, transforming the daunting task of locating the perfect home into a journey rich with insights and discoveries.

The power of data science in real estate lies in its ability to analyze vast amounts of information, uncovering patterns, trends, and opportunities that might not be visible at first glance. For luxury homebuyers, this means the ability to identify properties that represent both opulence and value, ensuring their investment is as sound as it is beautiful.

Your first step is to identify the top 10 most expensive homes in Ames. This initial filter serves as your starting point, showcasing properties considered most valuable by the market. To do this, you’ll use the pandas library in Python to load your dataset and perform the necessary analysis.

Here’s the code that marks the beginning of your data-driven journey:
"""

!pip install folium

# Import the pandas library and load the dataset
import pandas as pd
Ames = pd.read_csv('Ames.csv')
pd.set_option('display.max_columns', None)
pd.set_option('display.width', 1000)

# Identify the 10 most expensive homes based on SalePrice with key features
top_10_expensive_homes = Ames.nlargest(10, 'SalePrice')

# Check for typos or case sensitivity issues in your column names
print(Ames.columns)  # Print all column names to verify

# Adjust the 'features' list if needed. Example assuming the correct names are 'Gr Liv Area', 'Overall Qual', etc.
features = ['SalePrice', 'Gr Liv Area', 'Overall Qual', 'Kitchen Qual', 'TotRms AbvGrd', 'Fireplaces']

top_10_df = top_10_expensive_homes[features]
print(top_10_df)

"""This block of code efficiently sifts through the Ames dataset to extract the 10 most expensive homes, focusing on key attributes that define luxury living: “SalePrice”, “GrLivArea” (above grade living area), “OverallQual” (overall material and finish quality), “KitchenQual” (kitchen quality), “TotRmsAbvGrd” (total rooms above grade), and “Fireplaces.” These features set the stage for differentiating between mere aesthetic appeal and true quality.

To refine your search further, you apply specific criteria that embody the essence of luxury living. You focus on homes that boast an Overall Quality rating of 10, indicating the highest level of craftsmanship and materials. Additionally, you look for properties with exceptional kitchen quality (KitchenQual of “Ex”) and a significant feature of luxury comfort: the presence of two or more fireplaces. These criteria help you sift through the top contenders to highlight properties that truly represent the pinnacle of luxury in Ames.

Let’s execute the next block of code to filter the list of the top 10 most expensive homes down to those that meet these elite standards:
"""

# Refine the search with highest quality, excellent kitchen, and 2 fireplaces
elite = top_10_df.query('`Overall Qual` == 10 & `Kitchen Qual` == "Ex" & Fireplaces >= 2').copy() # Added backticks around column names with spaces
print(elite)

"""This refined search narrows your focus to four elite properties that not only rank as some of the most expensive in Ames but also meet the stringent criteria for luxury.

As you delve deeper, it becomes imperative to introduce feature engineering. Feature engineering is the process of creating new variables or features from existing data that better represent the underlying problem. In your case, to enhance your understanding of real estate value. One such innovative feature is the Price Per Square Foot (PSF). The PSF metric emerges as a critical tool in your analytical arsenal, offering a perspective on value beyond mere listing prices. By calculating the PSF for each property, you can compare properties more equitably, irrespective of their size or the absolute price. This measure illuminates the investment value per square foot of living space, providing a standardized scale for assessing the true worth of luxury properties.

Let’s apply this calculation to your elite selection of homes:

This action yields the following insights, allowing you to rank the properties by their relative value:
"""

# Introduce PSF to rank the options
# Check if 'Gr Liv Area' is the correct column name, adjusting if necessary
elite['PSF'] = elite['SalePrice']/elite['Gr Liv Area']
print(elite.sort_values(by='PSF'))

"""Upon analyzing the PSF, it becomes evident that not all luxury homes are created equal. Despite being the most expensive on your list, the property with the lowest PSF offers the best value, underscoring the importance of this metric in evaluating luxury properties.

Now you can identify additional properties that embody the luxury standards and present exceptional value as defined by the PSF metric. By broadening your criteria to include all homes in the dataset with an Overall Quality rating of 10, excellent kitchen quality, and at least two fireplaces, but with a PSF under $175. The aim is to uncover homes that offer luxury at a more accessible price point.

Here’s how you proceed with this expanded analysis:

This refined search yields intriguing results:
"""

# Cross check entire homes to search for better value
Ames['PSF'] = Ames['SalePrice']/Ames['Gr Liv Area']
value = Ames.query('PSF < 175 & `Overall Qual` == 10 & `Kitchen Qual` == "Ex" & Fireplaces >=2')
print(value[['SalePrice', 'Gr Liv Area', 'Overall Qual', 'Kitchen Qual', 'TotRms AbvGrd', 'Fireplaces', 'PSF']])

# Cross check entire homes to search for better value
Ames['PSF'] = Ames['SalePrice']/Ames['Gr Liv Area']
value = Ames.query('PSF < 175 & `Overall Qual` == 10 & `Kitchen Qual` == "Ex" & Fireplaces >=2')
# Verify that 'TotRms Abv Grd' is a valid column in the 'value' DataFrame
print(value.columns)
print(value[['SalePrice', 'Gr Liv Area', 'Overall Qual', 'Kitchen Qual', 'Fireplaces', 'PSF']]) # Removed 'TotRms Abv Grd'

"""In this comprehensive search across the Ames dataset, you have uncovered two properties that not only embody the pinnacle of luxury with their superior amenities and craftsmanship but also stand as paragons of value within the luxury market. Remarkably, one of these homes presents a Price Per Square Foot (PSF) that significantly undercuts your established threshold, offering an exceptional opportunity for luxury homebuyers. This discovery underscores the potency of data science in real estate, enabling buyers to find homes that offer an extraordinary living experience and exceptional financial value.

Transitioning from numerical analysis to spatial visualization, let’s turn to Folium to map these standout properties within the geographical tapestry of Ames. This next step will provide a visual context to your findings and illustrate the practical application of data science in enhancing the real estate selection process, making the journey towards finding the perfect luxury home both informed and visually engaging.

Visualizing Opportunities: Mapping the Path to Accessible Luxury Real Estate
With the two standout properties identified, your next step leverages the power of Folium to bring these findings to life on an interactive map. This visualization not only situates each property within the geographical context of Ames, Iowa, but also enriches your analysis by allowing you to embed detailed information directly on the map.

Using Folium, you can create markers for each of these exceptional properties, providing potential buyers and stakeholders with a comprehensive overview at a glance. Each marker contains key data points about the property, including sale price, gross living area, quality ratings, and the calculated Price Per Square Foot (PSF), offering an intuitive and engaging way to explore these luxury homes. Below, you detail the process of adding this rich information to your map, ensuring each property is not just a point on a map, but a gateway to its unique story and value proposition.
"""

# Required imports
import folium
import pandas as pd

# Sample DataFrames for demonstration purposes
# Ensure your actual DataFrames 'value' and 'Ames' are properly defined
# For example:
# Ames = pd.read_csv('path_to_ames_dataset.csv')
# value = pd.read_csv('path_to_value_dataset.csv')

# Example data structure
# Ames DataFrame should contain columns 'Latitude' and 'Longitude'
# value DataFrame should contain columns 'SalePrice', 'GrLivArea', 'OverallQual', 'KitchenQual', 'TotRmsAbvGrd', 'Fireplaces', 'PSF'

# For example:
Ames = pd.DataFrame({
    'Latitude': [42.034722, 42.028333, 42.042500],
    'Longitude': [-93.620833, -93.631944, -93.653333]
})

value = pd.DataFrame({
    'SalePrice': [200000, 250000, 300000],
    'GrLivArea': [1500, 1800, 2000],
    'OverallQual': [7, 8, 9],
    'KitchenQual': ['Gd', 'TA', 'Ex'],
    'TotRmsAbvGrd': [7, 8, 9],
    'Fireplaces': [1, 2, 3],
    'PSF': [133.33, 138.89, 150.00]
})

# Sample final observation indexes (make sure these indexes are valid for your data)
final_observation_indexes = [0, 1, 2]

# Filter the dataset for these observations to get their latitude and longitude
final_locations = Ames.loc[final_observation_indexes, ['Latitude', 'Longitude']]

# Create a Folium map centered around the average location of the final observations
map_center = [final_locations['Latitude'].mean(), final_locations['Longitude'].mean()]
value_map = folium.Map(location=map_center, zoom_start=12)

# Add information to markers
for idx, row in final_locations.iterrows():
    # Extract additional information for the popup
    info = value.loc[idx, ['SalePrice', 'GrLivArea', 'OverallQual', 'KitchenQual', 'TotRmsAbvGrd', 'Fireplaces', 'PSF']]
    popup_text = f"""<b>Index:</b> {idx}<br>
                     <b>SalePrice:</b> ${info['SalePrice']}<br>
                     <b>GrLivArea:</b> {info['GrLivArea']} sqft<br>
                     <b>OverallQual:</b> {info['OverallQual']}<br>
                     <b>KitchenQual:</b> {info['KitchenQual']}<br>
                     <b>TotRmsAbvGrd:</b> {info['TotRmsAbvGrd']}<br>
                     <b>Fireplaces:</b> {info['Fireplaces']}<br>
                     <b>PSF:</b> ${info['PSF']:.2f} /sqft"""
    folium.Marker([row['Latitude'], row['Longitude']],
                  popup=folium.Popup(popup_text, max_width=250)).add_to(value_map)

# Save the map to an HTML file in the working directory
value_map.save('value_map.html')

"""As you encapsulate your analytical journey, this visualization emerges as a pivotal resource, guiding potential homeowners through a market replete with hidden gems, illuminated by the meticulous application of data science. This approach not only empowers buyers with a deeper understanding of luxury real estate values but also fosters a more informed, strategic, and ultimately fulfilling decision-making process.

Heat map is another powerful visualization technique offered by Folium. It provides a vivid representation of data density or intensity in a given geographical area, allowing you to identify hotspots of activity or interest within the Ames real estate market.
"""

# Required imports
import folium
from folium.plugins import HeatMap
import pandas as pd

# Sample DataFrame for demonstration purposes
# Ensure your actual DataFrame 'Ames' is properly defined and contains the required columns
# For example:
# Ames = pd.read_csv('path_to_ames_dataset.csv')

# Example data structure
# Ames DataFrame should contain columns 'Latitude', 'Longitude', and 'Neighborhood'
Ames = pd.DataFrame({
    'Latitude': [42.034722, 42.028333, 42.042500, 42.030000],
    'Longitude': [-93.620833, -93.631944, -93.653333, -93.615000],
    'Neighborhood': ['NAmes', 'CollgCr', 'OldTown', 'Edwards']
})

# Filter out rows with NaN values in 'Latitude' or 'Longitude'
Ames_Heat = Ames.dropna(subset=['Latitude', 'Longitude'])

# Group by 'Neighborhood' and calculate mean 'Latitude' and 'Longitude'
neighborhood_locs = Ames_Heat.groupby('Neighborhood').agg({'Latitude': 'mean', 'Longitude': 'mean'}).reset_index()

# Create a map centered around Ames, Iowa
ames_map_center = [Ames_Heat['Latitude'].mean(), Ames_Heat['Longitude'].mean()]
ames_heatmap = folium.Map(location=ames_map_center, zoom_start=12)

# Extract latitude and longitude data for the heatmap
heat_data = [[row['Latitude'], row['Longitude']] for index, row in Ames_Heat.iterrows()]

# Create and add a HeatMap layer to the map
HeatMap(heat_data, radius=12).add_to(ames_heatmap)

# Add one black flag per neighborhood to the map
for index, row in neighborhood_locs.iterrows():
    folium.Marker(
        location=[row['Latitude'], row['Longitude']],
        popup=row['Neighborhood'],
        icon=folium.Icon(color='black', icon='flag')
    ).add_to(ames_heatmap)

# Save the map to an HTML file in the working directory
ames_heatmap.save('ames_heatmap.html')

"""In the output, you’ve strategically placed flags to mark each neighborhood within Ames, providing immediate visual cues to their locations. These flags, distinguished by their black color, bear the full name of each neighborhood, serving as a navigational guide through your exploration. Additionally, the heat map utilizes a color gradient to indicate the density of properties, with warmer colors representing higher concentrations of homes. This color coding not only enhances the visual appeal of your map but also offers an intuitive understanding of market activity and potential areas of interest for developers and buyers alike.

Leveraging insights from your heat map visualization enables developers to strategically target lower-density neighborhoods. By focusing on emerging neighborhoods and prioritizing innovative design and construction efficiency, developers can introduce a new dimension of affordable luxury homes. This strategy caters to the demand for high-quality living spaces and expands the market by making luxury homes more accessible to a broader audience. This combined strategy, informed by data science, geospatial analysis, and domain experts, underscores the transformative potential of these disciplines in shaping the future of accessible luxury real estate, ensuring that high-quality living is within reach for more people.
"""